diff --git a/lua/src/lua.c b/lua/src/lua.c
index 6da331f..1f34b58 100644
--- a/lua/src/lua.c
+++ b/lua/src/lua.c
@@ -447,6 +447,32 @@ static int handle_luainit (lua_State *L) {
 #define lua_saveline(L,line)	((void)L, add_history(line))
 #define lua_freeline(L,b)	((void)L, free(b))
 
+#define LUA_HISTORY_FILE ".lua-history"
+
+void lua_readhistory(lua_State *L) {
+  luaL_Buffer histfile;
+  luaL_buffinit(L, &histfile);
+  luaL_addstring(&histfile, getenv("HOME"));
+  luaL_addchar(&histfile, '/');
+  luaL_addstring(&histfile, LUA_HISTORY_FILE);
+  luaL_addchar(&histfile, '\0');
+
+  stifle_history(1024);
+  read_history(luaL_buffaddr(&histfile));
+  lua_pop(L, 1);
+}
+
+void lua_writehistory(lua_State *L) {
+  luaL_Buffer histfile;
+  luaL_buffinit(L, &histfile);
+  luaL_addstring(&histfile, getenv("HOME"));
+  luaL_addchar(&histfile, '/');
+  luaL_addstring(&histfile, LUA_HISTORY_FILE);
+  luaL_addchar(&histfile, '\0');
+  write_history(luaL_buffaddr(&histfile));
+  lua_pop(L, 1);
+}
+
 #else				/* }{ */
 
 #define lua_initreadline(L)  ((void)L)
@@ -455,6 +481,8 @@ static int handle_luainit (lua_State *L) {
         fgets(b, LUA_MAXINPUT, stdin) != NULL)  /* get line */
 #define lua_saveline(L,line)	{ (void)L; (void)line; }
 #define lua_freeline(L,b)	{ (void)L; (void)b; }
+#define lua_readhistory(L) ((void) L)
+#define lua_writehistory(L) ((void) L)
 
 #endif				/* } */
 
@@ -659,7 +687,9 @@ static int pmain (lua_State *L) {
   else if (script < 1 && !(args & (has_e | has_v))) { /* no active option? */
     if (lua_stdin_is_tty()) {  /* running in interactive mode? */
       print_version();
+      lua_readhistory(L); /* read history */
       doREPL(L);  /* do read-eval-print loop */
+      lua_writehistory(L); /* write history */
     }
     else dofile(L, NULL);  /* executes stdin as a file */
   }
