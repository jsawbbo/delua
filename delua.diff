diff --git a/src/lua/README b/src/lua/README
index 8899ea4..ed424de 100644
--- a/src/lua/README
+++ b/src/lua/README
@@ -4,7 +4,3 @@ This is Lua 5.3.5, released on 26 Jun 2018.
 For installation instructions, license details, and
 further information about Lua, see doc/readme.html.
 
-This package is a [cmake](https://cmake.org/)'ified version 
-of plain [Lua](http://www.lua.org). 
-
-See cmake's LUA_\* variables for further information.
diff --git a/src/lua/src/lstate.c b/src/lua/src/lstate.c
index 47f6020..c1a7664 100644
--- a/src/lua/src/lstate.c
+++ b/src/lua/src/lstate.c
@@ -328,9 +328,6 @@ LUA_API lua_State *lua_newstate (lua_Alloc f, void *ud) {
   g->gcfinnum = 0;
   g->gcpause = LUAI_GCPAUSE;
   g->gcstepmul = LUAI_GCMUL;
-#if defined(LUA_HAS_USER_GLOBAL_STATE)
-  g->userstate = 0;
-#endif
   for (i=0; i < LUA_NUMTAGS; i++) g->mt[i] = NULL;
   if (luaD_rawrunprotected(L, f_luaopen, NULL) != LUA_OK) {
     /* memory allocation error: free partial state */
diff --git a/src/lua/src/lstate.h b/src/lua/src/lstate.h
index ce27a8b..56b3741 100644
--- a/src/lua/src/lstate.h
+++ b/src/lua/src/lstate.h
@@ -169,9 +169,6 @@ typedef struct global_State {
   TString *tmname[TM_N];  /* array with tag-method names */
   struct Table *mt[LUA_NUMTAGS];  /* metatables for basic types */
   TString *strcache[STRCACHE_N][STRCACHE_M];  /* cache for strings in API */
-#if defined(LUA_HAS_USER_GLOBAL_STATE)
-  LUA_USER_GLOBAL_STATE *userstate;
-#endif
 } global_State;
 
 
diff --git a/src/lua/src/lua.hpp b/src/lua/src/lua.hpp
index fdeafc2..ec417f5 100644
--- a/src/lua/src/lua.hpp
+++ b/src/lua/src/lua.hpp
@@ -2,13 +2,8 @@
 // Lua header files for C++
 // <<extern "C">> not supplied automatically because Lua also compiles as C++
 
-#include "luaconf.h"
-#if !defined(__lua_cplusplus)
 extern "C" {
-#endif
 #include "lua.h"
 #include "lualib.h"
 #include "lauxlib.h"
-#if !defined(__lua_cplusplus)
 }
-#endif
